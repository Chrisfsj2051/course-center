<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgzs.seweb.dao.ReplyTieMapper">
  <resultMap id="BaseResultMap" type="com.cxgzs.seweb.model.ReplyTie">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="tie_id" jdbcType="INTEGER" property="tieId" />
    <result column="uno" jdbcType="VARCHAR" property="uno" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
    <result column="reply_to" jdbcType="INTEGER" property="replyTo" />
  </resultMap>
  <sql id="Base_Column_List">
    reply_id, tie_id, uno, content, reply_time, reply_to
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply_tie
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <select id="selectByTieId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from reply_tie
    where tie_id = #{tieId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply_tie
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByTieId" parameterType="java.lang.Integer">
    delete from reply_tie
    where tie_id = #{tieId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cxgzs.seweb.model.ReplyTie">
    insert into reply_tie (reply_id, tie_id, uno, 
      content, reply_time, reply_to
      )
    values (#{replyId,jdbcType=INTEGER}, #{tieId,jdbcType=INTEGER}, #{uno,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}, #{replyTo,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cxgzs.seweb.model.ReplyTie">
    insert into reply_tie
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="tieId != null">
        tie_id,
      </if>
      <if test="uno != null">
        uno,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="replyTo != null">
        reply_to,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="tieId != null">
        #{tieId,jdbcType=INTEGER},
      </if>
      <if test="uno != null">
        #{uno,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTo != null">
        #{replyTo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cxgzs.seweb.model.ReplyTie">
    update reply_tie
    <set>
      <if test="tieId != null">
        tie_id = #{tieId,jdbcType=INTEGER},
      </if>
      <if test="uno != null">
        uno = #{uno,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTo != null">
        reply_to = #{replyTo,jdbcType=INTEGER},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cxgzs.seweb.model.ReplyTie">
    update reply_tie
    set tie_id = #{tieId,jdbcType=INTEGER},
      uno = #{uno,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      reply_to = #{replyTo,jdbcType=INTEGER}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>